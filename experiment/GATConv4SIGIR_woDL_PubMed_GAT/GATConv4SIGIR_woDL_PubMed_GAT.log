Dataset: PubMed():
===========================================================================================================
Number of graphs: 1
Number of features: 500
Number of classes: 3
Data(edge_index=[2, 88648], test_mask=[19717], train_mask=[19717], val_mask=[19717], x=[19717, 500], y=[19717])
===========================================================================================================
Number of nodes: 19717
Number of edges: 88648
Average node degree: 4.50
Number of training nodes: 60
Training node label rate: 0.00
Contains isolated nodes: False
Contains self-loops: False
Is undirected: True

Label Relation
============================================================
Gold Label Y: tensor([[0., 1., 0.],
        [0., 1., 0.],
        [1., 0., 0.],
        ...,
        [0., 0., 1.],
        [1., 0., 0.],
        [0., 0., 1.]])
Shape: torch.Size([19717, 3])
Transpose of Y: tensor([[0., 0., 1.,  ..., 0., 1., 0.],
        [1., 1., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 1., 0., 1.]])
Shape: torch.Size([3, 19717])
Gold A: tensor([[1., 1., 0.,  ..., 0., 0., 0.],
        [1., 1., 0.,  ..., 0., 0., 0.],
        [0., 0., 1.,  ..., 0., 1., 0.],
        ...,
        [0., 0., 0.,  ..., 1., 0., 1.],
        [0., 0., 1.,  ..., 0., 1., 0.],
        [0., 0., 0.,  ..., 1., 0., 1.]])
Shape: torch.Size([19717, 19717])

Model GAT(
  (conv1): GATConv(500, 8, heads=8)
  (conv2): GATConv(64, 3, heads=1)
)
Optimizer Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.01
    weight_decay: 0.0005

Parameter Group 1
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.01
    weight_decay: 0
)
Start Training 0
===========================================================================================================
Run 0 Val. Acc. 0.798 Test Acc. 0.78
Finished Training 0 

A tensor([[1., 0., 0.,  ..., 0., 0., 0.],
        [0., 1., 0.,  ..., 0., 0., 0.],
        [0., 0., 1.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 1., 0., 0.],
        [0., 0., 0.,  ..., 0., 1., 0.],
        [0., 0., 0.,  ..., 0., 0., 1.]], device='cuda:0') torch.Size([19717, 19717])
Model GAT(
  (conv1): GAT4ConvSIGIR(500, 8, heads=8)
  (conv2): GATConv(64, 3, heads=1)
)
Optimizer Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.01
    weight_decay: 0.0005

Parameter Group 1
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.01
    weight_decay: 0
)
Start Training 1
===========================================================================================================
Run 1 Val. Acc. 0.804 Test Acc. 0.771
Finished Training 1 

original data.num_edges 88648
new_edge tensor([[ 3019,  8135,  6194,  6808, 16775,  4703,  6721, 14902,  8481,  2533,
          8135, 12523, 17718,  7172,  7839,   732, 15599, 16924, 13068,  1882,
          1310,  4980, 12676, 16775, 18150, 11092,  4235,   794, 18857, 16815,
         16478,  5950,  5384,   198, 10428, 12833, 14280, 10854],
        [ 8545,  5321, 13977, 17325,  7192, 10198, 16700, 17480,  6167,  8052,
         13756,  4528, 13108,  8105, 13892,  5852,  5839,  6673, 13264, 16615,
         14674,  4430,  9168,  2270, 18960,  3647,  3644, 19565, 16853, 18839,
          4512, 15760,  6681,  2290,  9185,  4039, 17465, 15304]],
       device='cuda:0') torch.Size([2, 38])
new_edge_homo tensor([[ 8545,  5321, 13977, 17325,  7192, 10198, 16700, 17480,  6167,  8052,
         13756,  4528, 13108,  8105, 13892,  5852,  5839,  6673, 13264, 16615,
         14674,  4430,  9168,  2270, 18960,  3647,  3644, 19565, 16853, 18839,
          4512, 15760,  6681,  2290,  9185,  4039, 17465, 15304],
        [ 3019,  8135,  6194,  6808, 16775,  4703,  6721, 14902,  8481,  2533,
          8135, 12523, 17718,  7172,  7839,   732, 15599, 16924, 13068,  1882,
          1310,  4980, 12676, 16775, 18150, 11092,  4235,   794, 18857, 16815,
         16478,  5950,  5384,   198, 10428, 12833, 14280, 10854]],
       device='cuda:0') torch.Size([2, 38])
data.num_edges 88724
dense_adj tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]], device='cuda:0') torch.Size([19717, 19717])
dense_adj (norm) tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]], device='cuda:0') torch.Size([19717, 19717])
edge_index tensor([[    0,     0,     0,  ..., 19714, 19715, 19716],
        [ 1378,  1544,  6092,  ..., 12278,  4284, 16030]], device='cuda:0') torch.Size([2, 88724])
edge_weight tensor([1., 1., 1.,  ..., 1., 1., 1.], device='cuda:0') torch.Size([88724])
data.num_edges 88724
A tensor([[1., 0., 0.,  ..., 0., 0., 0.],
        [0., 1., 0.,  ..., 0., 0., 0.],
        [0., 0., 1.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 1., 0., 0.],
        [0., 0., 0.,  ..., 0., 1., 0.],
        [0., 0., 0.,  ..., 0., 0., 1.]], device='cuda:0') torch.Size([19717, 19717])
Model GAT(
  (conv1): GAT4ConvSIGIR(500, 8, heads=8)
  (conv2): GATConv(64, 3, heads=1)
)
Optimizer Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.01
    weight_decay: 0.0005

Parameter Group 1
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.01
    weight_decay: 0
)
Start Training 2
===========================================================================================================
Run 2 Val. Acc. 0.808 Test Acc. 0.791
Finished Training 2 

original data.num_edges 88724
new_edge tensor([[ 8260,  9295, 17285, 16386, 18769, 15032,  5263,  8964,  6881, 12841,
          3724,  1318,  4169, 15787,  1888, 16206, 19193,  7498,  3272, 18832,
         10857,  1844,  5803, 13277, 18949, 15973,  4229,  7693, 15907,  6077,
          5834,  2077, 16672, 18869, 15601, 11027, 12752, 10999,  3158,  8080,
          4457,  9909,  5573,  6965, 16243,  8182, 18655,  2444, 17291, 11815,
          9219,  9730],
        [11441, 15170,  2768, 11668, 19010, 10054,  1253, 18136, 10654,  4949,
         13895,  9773, 13527, 14667,  7250, 18503, 13581, 16894,  4126,  8517,
          5793, 15575,   484,  3592, 13488, 13201,  9315, 11709, 17201,  6147,
         18061,  7693, 18593, 19309,  7807, 14541, 19283, 17682, 11834,  7678,
         14623,  2699, 16178,  5875,  9886, 18150, 12430, 13798,   413, 12493,
         14472, 12657]], device='cuda:0') torch.Size([2, 52])
new_edge_homo tensor([[11441, 15170,  2768, 11668, 19010, 10054,  1253, 18136, 10654,  4949,
         13895,  9773, 13527, 14667,  7250, 18503, 13581, 16894,  4126,  8517,
          5793, 15575,   484,  3592, 13488, 13201,  9315, 11709, 17201,  6147,
         18061,  7693, 18593, 19309,  7807, 14541, 19283, 17682, 11834,  7678,
         14623,  2699, 16178,  5875,  9886, 18150, 12430, 13798,   413, 12493,
         14472, 12657],
        [ 8260,  9295, 17285, 16386, 18769, 15032,  5263,  8964,  6881, 12841,
          3724,  1318,  4169, 15787,  1888, 16206, 19193,  7498,  3272, 18832,
         10857,  1844,  5803, 13277, 18949, 15973,  4229,  7693, 15907,  6077,
          5834,  2077, 16672, 18869, 15601, 11027, 12752, 10999,  3158,  8080,
          4457,  9909,  5573,  6965, 16243,  8182, 18655,  2444, 17291, 11815,
          9219,  9730]], device='cuda:0') torch.Size([2, 52])
data.num_edges 88828
dense_adj tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]], device='cuda:0') torch.Size([19717, 19717])
dense_adj (norm) tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]], device='cuda:0') torch.Size([19717, 19717])
edge_index tensor([[    0,     0,     0,  ..., 19714, 19715, 19716],
        [ 1378,  1544,  6092,  ..., 12278,  4284, 16030]], device='cuda:0') torch.Size([2, 88828])
edge_weight tensor([1., 1., 1.,  ..., 1., 1., 1.], device='cuda:0') torch.Size([88828])
data.num_edges 88828
A tensor([[1., 0., 0.,  ..., 0., 0., 0.],
        [0., 1., 0.,  ..., 0., 0., 0.],
        [0., 0., 1.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 1., 0., 0.],
        [0., 0., 0.,  ..., 0., 1., 0.],
        [0., 0., 0.,  ..., 0., 0., 1.]], device='cuda:0') torch.Size([19717, 19717])
Model GAT(
  (conv1): GAT4ConvSIGIR(500, 8, heads=8)
  (conv2): GATConv(64, 3, heads=1)
)
Optimizer Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.01
    weight_decay: 0.0005

Parameter Group 1
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.01
    weight_decay: 0
)
Start Training 3
===========================================================================================================
Run 3 Val. Acc. 0.802 Test Acc. 0.776
Finished Training 3 

original data.num_edges 88828
new_edge tensor([[  350,  3809, 13065, 16061,  4324, 19492, 13191,  2776,  7240, 12376,
         19392, 13093,  2995, 13037, 17279,  5218,  8424,  4465, 11084,  5211,
          6714,  1465, 16044,  4482, 19507,   865,  5644, 10497,  5281, 14740,
         10152, 19058,  3665,  5236,  2026, 14041, 16513, 10244, 14112,  7797,
          7677,  9786, 17870],
        [ 2468,  5835,  9951, 17263,  3830,  7082, 14725, 17090,  8886, 17417,
         16230,  6991, 11599,   531,  7639,  1422, 19434, 19411,  9214, 19694,
          5659, 17099, 12958,  6714,  3450,  8651, 11051, 18265, 10942,  7831,
         17822, 17074,  8447, 15718,  8718,    20, 19492, 11196, 11288,  4760,
         11658,  6981, 11504]], device='cuda:0') torch.Size([2, 43])
new_edge_homo tensor([[ 2468,  5835,  9951, 17263,  3830,  7082, 14725, 17090,  8886, 17417,
         16230,  6991, 11599,   531,  7639,  1422, 19434, 19411,  9214, 19694,
          5659, 17099, 12958,  6714,  3450,  8651, 11051, 18265, 10942,  7831,
         17822, 17074,  8447, 15718,  8718,    20, 19492, 11196, 11288,  4760,
         11658,  6981, 11504],
        [  350,  3809, 13065, 16061,  4324, 19492, 13191,  2776,  7240, 12376,
         19392, 13093,  2995, 13037, 17279,  5218,  8424,  4465, 11084,  5211,
          6714,  1465, 16044,  4482, 19507,   865,  5644, 10497,  5281, 14740,
         10152, 19058,  3665,  5236,  2026, 14041, 16513, 10244, 14112,  7797,
          7677,  9786, 17870]], device='cuda:0') torch.Size([2, 43])
data.num_edges 88914
dense_adj tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]], device='cuda:0') torch.Size([19717, 19717])
dense_adj (norm) tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]], device='cuda:0') torch.Size([19717, 19717])
edge_index tensor([[    0,     0,     0,  ..., 19714, 19715, 19716],
        [ 1378,  1544,  6092,  ..., 12278,  4284, 16030]], device='cuda:0') torch.Size([2, 88914])
edge_weight tensor([1., 1., 1.,  ..., 1., 1., 1.], device='cuda:0') torch.Size([88914])
data.num_edges 88914
A tensor([[1., 0., 0.,  ..., 0., 0., 0.],
        [0., 1., 0.,  ..., 0., 0., 0.],
        [0., 0., 1.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 1., 0., 0.],
        [0., 0., 0.,  ..., 0., 1., 0.],
        [0., 0., 0.,  ..., 0., 0., 1.]], device='cuda:0') torch.Size([19717, 19717])
Model GAT(
  (conv1): GAT4ConvSIGIR(500, 8, heads=8)
  (conv2): GATConv(64, 3, heads=1)
)
Optimizer Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.01
    weight_decay: 0.0005

Parameter Group 1
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.01
    weight_decay: 0
)
Start Training 4
===========================================================================================================
Run 4 Val. Acc. 0.802 Test Acc. 0.773
Finished Training 4 

original data.num_edges 88914
new_edge tensor([[ 6773, 18619, 11644,  3690,  5001,  2998,  6263,  7464,  6810,  5584,
           301,  6720,  6640,  1310,  2489,  6021, 12833,  3903, 19525, 17129,
          6502, 11554,  7540, 14902,  4417,    57, 14946, 17589,  3429,  6618,
         11191, 14902, 15627,  4228,   413, 15685],
        [13174, 16221,    13, 14529, 10589, 15533,  7316,  2361, 12274, 11317,
         13608, 13191, 11192,   248,  9899,  5204, 18922, 17018,   828, 16859,
         13599, 11653,  1704, 14726,  2473,  8883,  8460, 16135, 14352, 10346,
         11084, 11684, 13475,  6622, 12790, 19593]], device='cuda:0') torch.Size([2, 36])
new_edge_homo tensor([[13174, 16221,    13, 14529, 10589, 15533,  7316,  2361, 12274, 11317,
         13608, 13191, 11192,   248,  9899,  5204, 18922, 17018,   828, 16859,
         13599, 11653,  1704, 14726,  2473,  8883,  8460, 16135, 14352, 10346,
         11084, 11684, 13475,  6622, 12790, 19593],
        [ 6773, 18619, 11644,  3690,  5001,  2998,  6263,  7464,  6810,  5584,
           301,  6720,  6640,  1310,  2489,  6021, 12833,  3903, 19525, 17129,
          6502, 11554,  7540, 14902,  4417,    57, 14946, 17589,  3429,  6618,
         11191, 14902, 15627,  4228,   413, 15685]], device='cuda:0') torch.Size([2, 36])
data.num_edges 88986
dense_adj tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]], device='cuda:0') torch.Size([19717, 19717])
dense_adj (norm) tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]], device='cuda:0') torch.Size([19717, 19717])
edge_index tensor([[    0,     0,     0,  ..., 19714, 19715, 19716],
        [ 1378,  1544,  6092,  ..., 12278,  4284, 16030]], device='cuda:0') torch.Size([2, 88986])
edge_weight tensor([1., 1., 1.,  ..., 1., 1., 1.], device='cuda:0') torch.Size([88986])
data.num_edges 88986
A tensor([[1., 0., 0.,  ..., 0., 0., 0.],
        [0., 1., 0.,  ..., 0., 0., 0.],
        [0., 0., 1.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 1., 0., 0.],
        [0., 0., 0.,  ..., 0., 1., 0.],
        [0., 0., 0.,  ..., 0., 0., 1.]], device='cuda:0') torch.Size([19717, 19717])
Model GAT(
  (conv1): GAT4ConvSIGIR(500, 8, heads=8)
  (conv2): GATConv(64, 3, heads=1)
)
Optimizer Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.01
    weight_decay: 0.0005

Parameter Group 1
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.01
    weight_decay: 0
)
Start Training 5
===========================================================================================================
Run 5 Val. Acc. 0.806 Test Acc. 0.782
Finished Training 5 

original data.num_edges 88986
new_edge tensor([[11656,  8778, 15685, 18863,  3882, 18239, 18325, 14340, 13385, 12792,
         12483,  6687, 13427, 19601,  9980, 19392,  3266, 15526, 13732, 17367,
          9910, 13800,  4645,  4668, 12148, 14920,  3358, 10009, 12537, 19077,
         16908, 17041,  4887,  9505, 19371,   631,  3294, 14877, 16170, 10428,
          4657, 12421, 18656, 19083],
        [ 5015, 12275, 10964, 15302, 16477,  7620,  7474, 12928, 14914, 11477,
         15639, 19095,  5817, 10717,  4055, 13620,  2606, 19034, 17675, 19293,
          7990, 18234,  1373,  1007, 12581, 13787,  1719,  5764, 16219, 14989,
         18544,    11, 19601, 14010, 13054,  6167, 12950,  5025,  5502,  5417,
          4465, 18418, 17673,  1566]], device='cuda:0') torch.Size([2, 44])
new_edge_homo tensor([[ 5015, 12275, 10964, 15302, 16477,  7620,  7474, 12928, 14914, 11477,
         15639, 19095,  5817, 10717,  4055, 13620,  2606, 19034, 17675, 19293,
          7990, 18234,  1373,  1007, 12581, 13787,  1719,  5764, 16219, 14989,
         18544,    11, 19601, 14010, 13054,  6167, 12950,  5025,  5502,  5417,
          4465, 18418, 17673,  1566],
        [11656,  8778, 15685, 18863,  3882, 18239, 18325, 14340, 13385, 12792,
         12483,  6687, 13427, 19601,  9980, 19392,  3266, 15526, 13732, 17367,
          9910, 13800,  4645,  4668, 12148, 14920,  3358, 10009, 12537, 19077,
         16908, 17041,  4887,  9505, 19371,   631,  3294, 14877, 16170, 10428,
          4657, 12421, 18656, 19083]], device='cuda:0') torch.Size([2, 44])
data.num_edges 89074
dense_adj tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]], device='cuda:0') torch.Size([19717, 19717])
dense_adj (norm) tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]], device='cuda:0') torch.Size([19717, 19717])
edge_index tensor([[    0,     0,     0,  ..., 19714, 19715, 19716],
        [ 1378,  1544,  6092,  ..., 12278,  4284, 16030]], device='cuda:0') torch.Size([2, 89074])
edge_weight tensor([1., 1., 1.,  ..., 1., 1., 1.], device='cuda:0') torch.Size([89074])
data.num_edges 89074
A tensor([[1., 0., 0.,  ..., 0., 0., 0.],
        [0., 1., 0.,  ..., 0., 0., 0.],
        [0., 0., 1.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 1., 0., 0.],
        [0., 0., 0.,  ..., 0., 1., 0.],
        [0., 0., 0.,  ..., 0., 0., 1.]], device='cuda:0') torch.Size([19717, 19717])
Task Loss + Link Prediction Loss
Dataset split is the public fixed split
Val. Acc.: 0.8044 +/- 0.002332380757938122
Test. Acc.: 0.779 +/- 0.007
Vals Accs:  [0.804 0.808 0.802 0.802 0.806]
Test Accs [0.771 0.791 0.776 0.773 0.782]
