Dataset: Cora():
===========================================================================================================
Number of graphs: 1
Number of features: 1433
Number of classes: 7
Data(edge_index=[2, 10556], test_mask=[2708], train_mask=[2708], val_mask=[2708], x=[2708, 1433], y=[2708])
===========================================================================================================
Number of nodes: 2708
Number of edges: 10556
Average node degree: 3.90
Number of training nodes: 140
Training node label rate: 0.05
Contains isolated nodes: False
Contains self-loops: False
Is undirected: True

Label Relation
============================================================
Gold Label Y: tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 1., 0., 0.],
        [0., 0., 0.,  ..., 1., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])
Shape: torch.Size([2708, 7])
Transpose of Y: tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 1., 1.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])
Shape: torch.Size([7, 2708])
Gold A: tensor([[1., 0., 0.,  ..., 1., 1., 1.],
        [0., 1., 1.,  ..., 0., 0., 0.],
        [0., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [1., 0., 0.,  ..., 1., 1., 1.],
        [1., 0., 0.,  ..., 1., 1., 1.],
        [1., 0., 0.,  ..., 1., 1., 1.]])
Shape: torch.Size([2708, 2708])

Model Net(
  (conv1): GCNConv(1433, 16)
  (conv2): GCNConv(16, 7)
)
Optimizer Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.01
    weight_decay: 0.0005

Parameter Group 1
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.01
    weight_decay: 0
)
Start Training 0
===========================================================================================================
Run 0 Val. Acc. 0.798 Test Acc. 0.811
Finished Training 0 

A tensor([[1., 0., 0.,  ..., 0., 0., 0.],
        [0., 1., 1.,  ..., 0., 0., 0.],
        [0., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 1., 0., 0.],
        [0., 0., 0.,  ..., 0., 1., 1.],
        [0., 0., 0.,  ..., 0., 1., 1.]], device='cuda:0') torch.Size([2708, 2708])

Model Net(
  (conv1): GCN4ConvSIGIR(1433, 16)
  (conv2): GCNConv(16, 7)
)
Optimizer Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.01
    weight_decay: 0.0005

Parameter Group 1
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.01
    weight_decay: 0
)
Start Training 1
===========================================================================================================
Run 1 Val. Acc. 0.814 Test Acc. 0.819
Finished Training 1 

original data.num_edges 10556
new_edge tensor([[2428, 2287,  878, 2365, 2473, 1149, 2372,   29, 1162,  700],
        [ 801, 1133, 1122,   71,   12, 1103,  869, 1050, 2400, 2296]],
       device='cuda:0') torch.Size([2, 10])
new_edge_homo tensor([[ 801, 1133, 1122,   71,   12, 1103,  869, 1050, 2400, 2296],
        [2428, 2287,  878, 2365, 2473, 1149, 2372,   29, 1162,  700]],
       device='cuda:0') torch.Size([2, 10])
data.num_edges 10576
dense_adj tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 1.,  ..., 0., 0., 0.],
        [0., 1., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 1.],
        [0., 0., 0.,  ..., 0., 1., 0.]], device='cuda:0') torch.Size([2708, 2708])
dense_adj (norm) tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 1.,  ..., 0., 0., 0.],
        [0., 1., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 1.],
        [0., 0., 0.,  ..., 0., 1., 0.]], device='cuda:0') torch.Size([2708, 2708])
edge_index tensor([[   0,    0,    0,  ..., 2707, 2707, 2707],
        [ 633, 1862, 2582,  ...,  598, 1473, 2706]], device='cuda:0') torch.Size([2, 10576])
edge_weight tensor([1., 1., 1.,  ..., 1., 1., 1.], device='cuda:0') torch.Size([10576])
data.num_edges 10576
A tensor([[1., 0., 0.,  ..., 0., 0., 0.],
        [0., 1., 1.,  ..., 0., 0., 0.],
        [0., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 1., 0., 0.],
        [0., 0., 0.,  ..., 0., 1., 1.],
        [0., 0., 0.,  ..., 0., 1., 1.]], device='cuda:0') torch.Size([2708, 2708])

Model Net(
  (conv1): GCN4ConvSIGIR(1433, 16)
  (conv2): GCNConv(16, 7)
)
Optimizer Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.01
    weight_decay: 0.0005

Parameter Group 1
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.01
    weight_decay: 0
)
Start Training 2
===========================================================================================================
Run 2 Val. Acc. 0.814 Test Acc. 0.827
Finished Training 2 

original data.num_edges 10576
new_edge tensor([[  89, 1779, 2450, 1832, 1500,  154,  472, 2365,  352, 1835, 1117, 1367,
         1448,  447, 2323, 1499,  240, 1750,    9, 2452],
        [2400,  656, 1254, 2365,  878,  919,  720,  936, 1000,  539,  257,   54,
         1787,   93,  646, 1744,   12, 1737, 1719, 2557]], device='cuda:0') torch.Size([2, 20])
new_edge_homo tensor([[2400,  656, 1254, 2365,  878,  919,  720,  936, 1000,  539,  257,   54,
         1787,   93,  646, 1744,   12, 1737, 1719, 2557],
        [  89, 1779, 2450, 1832, 1500,  154,  472, 2365,  352, 1835, 1117, 1367,
         1448,  447, 2323, 1499,  240, 1750,    9, 2452]], device='cuda:0') torch.Size([2, 20])
data.num_edges 10616
dense_adj tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 1.,  ..., 0., 0., 0.],
        [0., 1., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 1.],
        [0., 0., 0.,  ..., 0., 1., 0.]], device='cuda:0') torch.Size([2708, 2708])
dense_adj (norm) tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 1.,  ..., 0., 0., 0.],
        [0., 1., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 1.],
        [0., 0., 0.,  ..., 0., 1., 0.]], device='cuda:0') torch.Size([2708, 2708])
edge_index tensor([[   0,    0,    0,  ..., 2707, 2707, 2707],
        [ 633, 1862, 2582,  ...,  598, 1473, 2706]], device='cuda:0') torch.Size([2, 10616])
edge_weight tensor([1., 1., 1.,  ..., 1., 1., 1.], device='cuda:0') torch.Size([10616])
data.num_edges 10616
A tensor([[1., 0., 0.,  ..., 0., 0., 0.],
        [0., 1., 1.,  ..., 0., 0., 0.],
        [0., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 1., 0., 0.],
        [0., 0., 0.,  ..., 0., 1., 1.],
        [0., 0., 0.,  ..., 0., 1., 1.]], device='cuda:0') torch.Size([2708, 2708])

Model Net(
  (conv1): GCN4ConvSIGIR(1433, 16)
  (conv2): GCNConv(16, 7)
)
Optimizer Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.01
    weight_decay: 0.0005

Parameter Group 1
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.01
    weight_decay: 0
)
Start Training 3
===========================================================================================================
Run 3 Val. Acc. 0.81 Test Acc. 0.831
Finished Training 3 

original data.num_edges 10616
new_edge tensor([[1367, 2460,  441, 1785,  364,  683,  922, 1738,  656,  686, 2095, 1744,
           54,  881, 1013],
        [2087, 1744, 1117, 2661, 1489, 1802, 2661, 1150,  864, 1719, 2505, 2476,
          372,  328, 1163]], device='cuda:0') torch.Size([2, 15])
new_edge_homo tensor([[2087, 1744, 1117, 2661, 1489, 1802, 2661, 1150,  864, 1719, 2505, 2476,
          372,  328, 1163],
        [1367, 2460,  441, 1785,  364,  683,  922, 1738,  656,  686, 2095, 1744,
           54,  881, 1013]], device='cuda:0') torch.Size([2, 15])
data.num_edges 10646
dense_adj tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 1.,  ..., 0., 0., 0.],
        [0., 1., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 1.],
        [0., 0., 0.,  ..., 0., 1., 0.]], device='cuda:0') torch.Size([2708, 2708])
dense_adj (norm) tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 1.,  ..., 0., 0., 0.],
        [0., 1., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 1.],
        [0., 0., 0.,  ..., 0., 1., 0.]], device='cuda:0') torch.Size([2708, 2708])
edge_index tensor([[   0,    0,    0,  ..., 2707, 2707, 2707],
        [ 633, 1862, 2582,  ...,  598, 1473, 2706]], device='cuda:0') torch.Size([2, 10646])
edge_weight tensor([1., 1., 1.,  ..., 1., 1., 1.], device='cuda:0') torch.Size([10646])
data.num_edges 10646
A tensor([[1., 0., 0.,  ..., 0., 0., 0.],
        [0., 1., 1.,  ..., 0., 0., 0.],
        [0., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 1., 0., 0.],
        [0., 0., 0.,  ..., 0., 1., 1.],
        [0., 0., 0.,  ..., 0., 1., 1.]], device='cuda:0') torch.Size([2708, 2708])

Model Net(
  (conv1): GCN4ConvSIGIR(1433, 16)
  (conv2): GCNConv(16, 7)
)
Optimizer Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.01
    weight_decay: 0.0005

Parameter Group 1
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.01
    weight_decay: 0
)
Start Training 4
===========================================================================================================
Run 4 Val. Acc. 0.818 Test Acc. 0.831
Finished Training 4 

original data.num_edges 10646
new_edge tensor([[2365, 2627, 2485, 1787, 2365,  328,  747, 1955, 1982,   67, 2400,  969,
         2661],
        [1466, 1358, 1013,  303, 1489, 1659, 1828,  878, 2661,  747,   91,  919,
           66]], device='cuda:0') torch.Size([2, 13])
new_edge_homo tensor([[1466, 1358, 1013,  303, 1489, 1659, 1828,  878, 2661,  747,   91,  919,
           66],
        [2365, 2627, 2485, 1787, 2365,  328,  747, 1955, 1982,   67, 2400,  969,
         2661]], device='cuda:0') torch.Size([2, 13])
data.num_edges 10672
dense_adj tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 1.,  ..., 0., 0., 0.],
        [0., 1., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 1.],
        [0., 0., 0.,  ..., 0., 1., 0.]], device='cuda:0') torch.Size([2708, 2708])
dense_adj (norm) tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 1.,  ..., 0., 0., 0.],
        [0., 1., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 1.],
        [0., 0., 0.,  ..., 0., 1., 0.]], device='cuda:0') torch.Size([2708, 2708])
edge_index tensor([[   0,    0,    0,  ..., 2707, 2707, 2707],
        [ 633, 1862, 2582,  ...,  598, 1473, 2706]], device='cuda:0') torch.Size([2, 10672])
edge_weight tensor([1., 1., 1.,  ..., 1., 1., 1.], device='cuda:0') torch.Size([10672])
data.num_edges 10672
A tensor([[1., 0., 0.,  ..., 0., 0., 0.],
        [0., 1., 1.,  ..., 0., 0., 0.],
        [0., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 1., 0., 0.],
        [0., 0., 0.,  ..., 0., 1., 1.],
        [0., 0., 0.,  ..., 0., 1., 1.]], device='cuda:0') torch.Size([2708, 2708])

Model Net(
  (conv1): GCN4ConvSIGIR(1433, 16)
  (conv2): GCNConv(16, 7)
)
Optimizer Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.01
    weight_decay: 0.0005

Parameter Group 1
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.01
    weight_decay: 0
)
Start Training 5
===========================================================================================================
Run 5 Val. Acc. 0.822 Test Acc. 0.836
Finished Training 5 

original data.num_edges 10672
new_edge tensor([[ 878,  562, 1149, 2359,  676, 1126,  686, 2080, 2428,  627, 1534, 2662,
          137],
        [2506,  501, 2691,  143, 1133,    0,  999, 1623,  935, 2400, 2473, 2538,
         1204]], device='cuda:0') torch.Size([2, 13])
new_edge_homo tensor([[2506,  501, 2691,  143, 1133,    0,  999, 1623,  935, 2400, 2473, 2538,
         1204],
        [ 878,  562, 1149, 2359,  676, 1126,  686, 2080, 2428,  627, 1534, 2662,
          137]], device='cuda:0') torch.Size([2, 13])
data.num_edges 10698
dense_adj tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 1.,  ..., 0., 0., 0.],
        [0., 1., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 1.],
        [0., 0., 0.,  ..., 0., 1., 0.]], device='cuda:0') torch.Size([2708, 2708])
dense_adj (norm) tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 1.,  ..., 0., 0., 0.],
        [0., 1., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 1.],
        [0., 0., 0.,  ..., 0., 1., 0.]], device='cuda:0') torch.Size([2708, 2708])
edge_index tensor([[   0,    0,    0,  ..., 2707, 2707, 2707],
        [ 633, 1126, 1862,  ...,  598, 1473, 2706]], device='cuda:0') torch.Size([2, 10698])
edge_weight tensor([1., 1., 1.,  ..., 1., 1., 1.], device='cuda:0') torch.Size([10698])
data.num_edges 10698
A tensor([[1., 0., 0.,  ..., 0., 0., 0.],
        [0., 1., 1.,  ..., 0., 0., 0.],
        [0., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 1., 0., 0.],
        [0., 0., 0.,  ..., 0., 1., 1.],
        [0., 0., 0.,  ..., 0., 1., 1.]], device='cuda:0') torch.Size([2708, 2708])
Task Loss + Link Prediction Loss
Dataset split is the public fixed split
Val. Acc.: 0.8155999999999999 +/- 0.004079215610874201
Test. Acc.: 0.829 +/- 0.006
Vals Accs:  [0.814 0.814 0.81  0.818 0.822]
Test Accs [0.819 0.827 0.831 0.831 0.836]
