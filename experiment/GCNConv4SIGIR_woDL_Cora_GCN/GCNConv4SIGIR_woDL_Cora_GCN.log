Dataset: Cora():
===========================================================================================================
Number of graphs: 1
Number of features: 1433
Number of classes: 7
Data(edge_index=[2, 10556], test_mask=[2708], train_mask=[2708], val_mask=[2708], x=[2708, 1433], y=[2708])
===========================================================================================================
Number of nodes: 2708
Number of edges: 10556
Average node degree: 3.90
Number of training nodes: 140
Training node label rate: 0.05
Contains isolated nodes: False
Contains self-loops: False
Is undirected: True

Label Relation
============================================================
Gold Label Y: tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 1., 0., 0.],
        [0., 0., 0.,  ..., 1., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])
Shape: torch.Size([2708, 7])
Transpose of Y: tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 1., 1.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])
Shape: torch.Size([7, 2708])
Gold A: tensor([[1., 0., 0.,  ..., 1., 1., 1.],
        [0., 1., 1.,  ..., 0., 0., 0.],
        [0., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [1., 0., 0.,  ..., 1., 1., 1.],
        [1., 0., 0.,  ..., 1., 1., 1.],
        [1., 0., 0.,  ..., 1., 1., 1.]])
Shape: torch.Size([2708, 2708])

Model Net(
  (conv1): GCNConv(1433, 16)
  (conv2): GCNConv(16, 7)
)
Optimizer Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.01
    weight_decay: 0.0005

Parameter Group 1
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.01
    weight_decay: 0
)
Start Training 0
===========================================================================================================
Run 0 Val. Acc. 0.798 Test Acc. 0.811
Finished Training 0 

A tensor([[1., 0., 0.,  ..., 0., 0., 0.],
        [0., 1., 1.,  ..., 0., 0., 0.],
        [0., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 1., 0., 0.],
        [0., 0., 0.,  ..., 0., 1., 1.],
        [0., 0., 0.,  ..., 0., 1., 1.]], device='cuda:0') torch.Size([2708, 2708])

Model Net(
  (conv1): GCN4ConvSIGIR(1433, 16)
  (conv2): GCNConv(16, 7)
)
Optimizer Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.01
    weight_decay: 0.0005

Parameter Group 1
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.01
    weight_decay: 0
)
Start Training 1
===========================================================================================================
Run 1 Val. Acc. 0.808 Test Acc. 0.826
Finished Training 1 

original data.num_edges 10556
new_edge tensor([[2428, 2287, 1914, 2365,  121, 2473, 1149,  501,   29, 1162,  700, 1593],
        [ 801, 1133,  123,   71, 2487,   12, 1103, 1712, 1050, 2400, 2296,   93]],
       device='cuda:0') torch.Size([2, 12])
new_edge_homo tensor([[ 801, 1133,  123,   71, 2487,   12, 1103, 1712, 1050, 2400, 2296,   93],
        [2428, 2287, 1914, 2365,  121, 2473, 1149,  501,   29, 1162,  700, 1593]],
       device='cuda:0') torch.Size([2, 12])
data.num_edges 10580
dense_adj tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 1.,  ..., 0., 0., 0.],
        [0., 1., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 1.],
        [0., 0., 0.,  ..., 0., 1., 0.]], device='cuda:0') torch.Size([2708, 2708])
dense_adj (norm) tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 1.,  ..., 0., 0., 0.],
        [0., 1., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 1.],
        [0., 0., 0.,  ..., 0., 1., 0.]], device='cuda:0') torch.Size([2708, 2708])
edge_index tensor([[   0,    0,    0,  ..., 2707, 2707, 2707],
        [ 633, 1862, 2582,  ...,  598, 1473, 2706]], device='cuda:0') torch.Size([2, 10580])
edge_weight tensor([1., 1., 1.,  ..., 1., 1., 1.], device='cuda:0') torch.Size([10580])
data.num_edges 10580
A tensor([[1., 0., 0.,  ..., 0., 0., 0.],
        [0., 1., 1.,  ..., 0., 0., 0.],
        [0., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 1., 0., 0.],
        [0., 0., 0.,  ..., 0., 1., 1.],
        [0., 0., 0.,  ..., 0., 1., 1.]], device='cuda:0') torch.Size([2708, 2708])

Model Net(
  (conv1): GCN4ConvSIGIR(1433, 16)
  (conv2): GCNConv(16, 7)
)
Optimizer Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.01
    weight_decay: 0.0005

Parameter Group 1
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.01
    weight_decay: 0
)
Start Training 2
===========================================================================================================
Run 2 Val. Acc. 0.81 Test Acc. 0.828
Finished Training 2 

original data.num_edges 10580
new_edge tensor([[  89, 1779, 2450, 1832, 1500,  154,  472, 2365, 2177,  352, 1835, 1117,
         1367, 1448,  447, 2323, 2234,  240,    9, 2452],
        [2400,  656, 1254, 2365,  878,  919,  720,  936, 2488, 1000,  539,  257,
           54, 1787,   93,  646,  395,   12, 1719, 2557]], device='cuda:0') torch.Size([2, 20])
new_edge_homo tensor([[2400,  656, 1254, 2365,  878,  919,  720,  936, 2488, 1000,  539,  257,
           54, 1787,   93,  646,  395,   12, 1719, 2557],
        [  89, 1779, 2450, 1832, 1500,  154,  472, 2365, 2177,  352, 1835, 1117,
         1367, 1448,  447, 2323, 2234,  240,    9, 2452]], device='cuda:0') torch.Size([2, 20])
data.num_edges 10620
dense_adj tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 1.,  ..., 0., 0., 0.],
        [0., 1., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 1.],
        [0., 0., 0.,  ..., 0., 1., 0.]], device='cuda:0') torch.Size([2708, 2708])
dense_adj (norm) tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 1.,  ..., 0., 0., 0.],
        [0., 1., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 1.],
        [0., 0., 0.,  ..., 0., 1., 0.]], device='cuda:0') torch.Size([2708, 2708])
edge_index tensor([[   0,    0,    0,  ..., 2707, 2707, 2707],
        [ 633, 1862, 2582,  ...,  598, 1473, 2706]], device='cuda:0') torch.Size([2, 10620])
edge_weight tensor([1., 1., 1.,  ..., 1., 1., 1.], device='cuda:0') torch.Size([10620])
data.num_edges 10620
A tensor([[1., 0., 0.,  ..., 0., 0., 0.],
        [0., 1., 1.,  ..., 0., 0., 0.],
        [0., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 1., 0., 0.],
        [0., 0., 0.,  ..., 0., 1., 1.],
        [0., 0., 0.,  ..., 0., 1., 1.]], device='cuda:0') torch.Size([2708, 2708])

Model Net(
  (conv1): GCN4ConvSIGIR(1433, 16)
  (conv2): GCNConv(16, 7)
)
Optimizer Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.01
    weight_decay: 0.0005

Parameter Group 1
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.01
    weight_decay: 0
)
Start Training 3
===========================================================================================================
Run 3 Val. Acc. 0.808 Test Acc. 0.826
Finished Training 3 

original data.num_edges 10620
new_edge tensor([[ 441, 1785,  364,  922, 1738,  656,  686, 2095, 1744,   54, 2080,  881,
         1013, 2331,  683, 1133, 1489],
        [1117, 2661, 1489, 2661, 1150,  864, 1719, 2505, 2476,  372,  831,  328,
         1163, 1367, 2359, 1537,  543]], device='cuda:0') torch.Size([2, 17])
new_edge_homo tensor([[1117, 2661, 1489, 2661, 1150,  864, 1719, 2505, 2476,  372,  831,  328,
         1163, 1367, 2359, 1537,  543],
        [ 441, 1785,  364,  922, 1738,  656,  686, 2095, 1744,   54, 2080,  881,
         1013, 2331,  683, 1133, 1489]], device='cuda:0') torch.Size([2, 17])
data.num_edges 10654
dense_adj tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 1.,  ..., 0., 0., 0.],
        [0., 1., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 1.],
        [0., 0., 0.,  ..., 0., 1., 0.]], device='cuda:0') torch.Size([2708, 2708])
dense_adj (norm) tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 1.,  ..., 0., 0., 0.],
        [0., 1., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 1.],
        [0., 0., 0.,  ..., 0., 1., 0.]], device='cuda:0') torch.Size([2708, 2708])
edge_index tensor([[   0,    0,    0,  ..., 2707, 2707, 2707],
        [ 633, 1862, 2582,  ...,  598, 1473, 2706]], device='cuda:0') torch.Size([2, 10654])
edge_weight tensor([1., 1., 1.,  ..., 1., 1., 1.], device='cuda:0') torch.Size([10654])
data.num_edges 10654
A tensor([[1., 0., 0.,  ..., 0., 0., 0.],
        [0., 1., 1.,  ..., 0., 0., 0.],
        [0., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 1., 0., 0.],
        [0., 0., 0.,  ..., 0., 1., 1.],
        [0., 0., 0.,  ..., 0., 1., 1.]], device='cuda:0') torch.Size([2708, 2708])

Model Net(
  (conv1): GCN4ConvSIGIR(1433, 16)
  (conv2): GCNConv(16, 7)
)
Optimizer Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.01
    weight_decay: 0.0005

Parameter Group 1
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.01
    weight_decay: 0
)
Start Training 4
===========================================================================================================
Run 4 Val. Acc. 0.814 Test Acc. 0.827
Finished Training 4 

original data.num_edges 10654
new_edge tensor([[1955, 1982,   67, 2400,  969, 2661,   18, 2323, 1747, 1349, 2662, 1418,
         1744, 2323],
        [ 878, 2661,  747,   91,  919,   66,  683, 1958, 1489, 2222, 2291, 2662,
         1832,  540]], device='cuda:0') torch.Size([2, 14])
new_edge_homo tensor([[ 878, 2661,  747,   91,  919,   66,  683, 1958, 1489, 2222, 2291, 2662,
         1832,  540],
        [1955, 1982,   67, 2400,  969, 2661,   18, 2323, 1747, 1349, 2662, 1418,
         1744, 2323]], device='cuda:0') torch.Size([2, 14])
data.num_edges 10682
dense_adj tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 1.,  ..., 0., 0., 0.],
        [0., 1., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 1.],
        [0., 0., 0.,  ..., 0., 1., 0.]], device='cuda:0') torch.Size([2708, 2708])
dense_adj (norm) tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 1.,  ..., 0., 0., 0.],
        [0., 1., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 1.],
        [0., 0., 0.,  ..., 0., 1., 0.]], device='cuda:0') torch.Size([2708, 2708])
edge_index tensor([[   0,    0,    0,  ..., 2707, 2707, 2707],
        [ 633, 1862, 2582,  ...,  598, 1473, 2706]], device='cuda:0') torch.Size([2, 10682])
edge_weight tensor([1., 1., 1.,  ..., 1., 1., 1.], device='cuda:0') torch.Size([10682])
data.num_edges 10682
A tensor([[1., 0., 0.,  ..., 0., 0., 0.],
        [0., 1., 1.,  ..., 0., 0., 0.],
        [0., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 1., 0., 0.],
        [0., 0., 0.,  ..., 0., 1., 1.],
        [0., 0., 0.,  ..., 0., 1., 1.]], device='cuda:0') torch.Size([2708, 2708])

Model Net(
  (conv1): GCN4ConvSIGIR(1433, 16)
  (conv2): GCNConv(16, 7)
)
Optimizer Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.01
    weight_decay: 0.0005

Parameter Group 1
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.01
    weight_decay: 0
)
Start Training 5
===========================================================================================================
Run 5 Val. Acc. 0.804 Test Acc. 0.829
Finished Training 5 

original data.num_edges 10682
new_edge tensor([[1534, 2662,  137, 2274,  104, 1747,  890, 2372,  381],
        [2473, 2538, 1204,  211, 1552,  111, 1785, 2696,   12]],
       device='cuda:0') torch.Size([2, 9])
new_edge_homo tensor([[2473, 2538, 1204,  211, 1552,  111, 1785, 2696,   12],
        [1534, 2662,  137, 2274,  104, 1747,  890, 2372,  381]],
       device='cuda:0') torch.Size([2, 9])
data.num_edges 10700
dense_adj tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 1.,  ..., 0., 0., 0.],
        [0., 1., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 1.],
        [0., 0., 0.,  ..., 0., 1., 0.]], device='cuda:0') torch.Size([2708, 2708])
dense_adj (norm) tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 1.,  ..., 0., 0., 0.],
        [0., 1., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 1.],
        [0., 0., 0.,  ..., 0., 1., 0.]], device='cuda:0') torch.Size([2708, 2708])
edge_index tensor([[   0,    0,    0,  ..., 2707, 2707, 2707],
        [ 633, 1862, 2582,  ...,  598, 1473, 2706]], device='cuda:0') torch.Size([2, 10700])
edge_weight tensor([1., 1., 1.,  ..., 1., 1., 1.], device='cuda:0') torch.Size([10700])
data.num_edges 10700
A tensor([[1., 0., 0.,  ..., 0., 0., 0.],
        [0., 1., 1.,  ..., 0., 0., 0.],
        [0., 1., 1.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 1., 0., 0.],
        [0., 0., 0.,  ..., 0., 1., 1.],
        [0., 0., 0.,  ..., 0., 1., 1.]], device='cuda:0') torch.Size([2708, 2708])
Task Loss + Link Prediction Loss
Dataset split is the public fixed split
Val. Acc.: 0.8088000000000001 +/- 0.0032496153618543516
Test. Acc.: 0.827 +/- 0.001
Vals Accs:  [0.808 0.81  0.808 0.814 0.804]
Test Accs [0.826 0.828 0.826 0.827 0.829]
